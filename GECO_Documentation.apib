FORMAT: 1A
# GECO

Gestor de Corpus

<!-- Faltan los parámetros nuevos para registrarse que agregará Ángel -->

## group Authentication

### Get an access token [POST /api-token-auth/]

Una vez que el usuario queda registrado se crea un token con el que se registrará que está activo y de esta manera pueda realizar las diferentes acciones sobre GECO

+ Attributes
    + email (string) - Correo electrónico del usuario
    + user_name (string) - Nombre de usuario
    + password (string) - Contraseña del usuario
    
+ Response 200 (application/json)
    + Body
    
            {
                "token": "JUHhhjsahdkadb7gewrr89rhwec2VyX2lkIjoxNSwidXNlcm5hbWUiOiJnYXRlc29mc2lsZW50QGhvdG1haWwuY29tIiwiZXhwIjoxNTQxNjM3ODMyLCJlbWFpbCI6ImdhdGVzb2ZzaWxlbnRAaG90bWFhhsadayssYGUGS9"
            }

## group Create Methods

### Create User [POST /gestion/registro-usuario]

Crea un nuevo usuario mientras no exista el nombre y/o esté registrado el correo electrónico

+ Attributes
    + email (string) - Correo electrónico del usuario
    + user_name (string) - Nombre de usuario
    + password (string) - Contraseña del usuario

+ Response 201 (application/json)
    + Body
    
            {
                "email": "usuario@gmail.com",
                "user_name": "nombre usuario",
                "password": "1234qwe"
            }
        
+ Response 409 (application/json)
    + Body
    
            {
                "error": "El nombre de usuario o correo ya existe"
            }
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Create Project [POST /gestion/crear-proyecto-normal]

Crea un nuevo proyecto
+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + name (string) - Nombre del proyecto
    + is_collab (optional, boolean) - Pertenece a proyecto colaborativo
    + is_public (optional, boolean) - Pertenece a proyecto público
    + metadata_list (array) - Lista de metadatos

+ Response 201 (application/json)
    + Body
    
            {
                "name": "Mi proyecto",
                "metadata_list": [
                    "metadato 1",
                    "metadato 2"
                ],
                "is_collab": true,
                "is_public": false
            }

          
+ Response 409
    + Body
    
            {
                "error": "El nombre del proyecto ya existe"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Add Collaborator [POST /gestion/add-collab-proy]

Adhiere un colaborador a un proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + user (string) - El nuevo colaborador
    + project (string) - El proyecto al que se unirá
    
+ Response 202 (application/json)
    + Body
    
            {
                "project": "nuevo proyecto",
                "user": "Pepe"
            }
            
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El proyecto no fue encontrado" // "error": "El usuario no fue encontrado"
            }
            
+ Response 401 (application/json)
    + Body
    
            {
                "detail": "Error decoding signature."
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Upload Document [POST /gestion/upload1]

Sube documentos al proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + file (object) - El documento
    + project (string) - Un proyecto existente
    
+ Response 201 (application/json)
    + Body
    
            {
                "file": null
                "project": "Mi proyecto"
            }
            
+ Response 409
    + Body
    
            {
                "error": "El nombre del documento ya existe"
            }
            
+ Response 401
    + Body
    
            {
                "detail": "Error decoding signature."
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Create Metadata [POST /gestion/crear-md-proyecto-nor]

Agrega los metadatos deseados por el usuario que tenga las credenciales necesarias

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + name (string) - Nombre del metadato
    + project (string) - Projecto al que pertenece el documento donde se agregará el metadato
    
+ Response 201 (application/json)
    + Body
    
            {
                "name": "nuevo metadato"
                "project": "Mi proyecto"
            }
            
+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permisos para hacer esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

    
### Relation Metadata-Document [POST /gestion/rel-doc-metadato]

Crea automáticamente una relación entre un documento con un metadato

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + metadata (string) - Nombre del metadato
    + document (string) - Nombre del documento
    + project (string) - Nombre del proyecto donde se encuentran ambos
    + data (string) - ID o nombre de la relación
    
+ Response 201 (application/json)
    + Body
    
            {
                "project": "Mi proyecto",
                "metadata": "metadato nuevo",
                "document": "example.pdf",
                "data": "data"
            }
            
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El metadato no fue encontrado" // "error": "El documento no fue encontrado"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Change Status Project [POST /gestion/cambiar-status-proyn]

Cambia el estado del proyecto de público a privado o viceversa

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + project (string) - Nombre del proyecto
    
+ Response 202 (application/json)
    + Body
    
            {
                "project": "Mi proyecto"
            }
            
+ Response 401 (application/json)
    + Body
        
            {
                "detail": "Error decoding signature."
            }

+ Response 404 (application/json)
    + Body
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### List of File Projects [POST /gestion/list-docs-proy]

Regresa una lista de objetos. Cada objeto contiene los datos de los archivos en un determinado proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + project (string) - Nombre del proyecto

+ Response 202 (application/json)
    + Body
    
            [
                [
                    {
                        "name": "uno_t4FZJ4C.txt",
                        "owner": "test@example.com",
                        "metadata": {}
                    }
                ],
                [
                    {
                        "name": "dos_lTYuz60.txt",
                        "owner": "test@example.com",
                        "metadata": {}
                    }
                ],
                [
                    {
                        "name": "tres_tSaThJ7.txt",
                        "owner": "test@example.com",
                        "metadata": {}
                    }
                ],
                [
                    {
                        "name": "cuatro_pV4xahO.txt",
                        "owner": "test@example.com",
                        "metadata": {}
                    }
                ]
            ]

+ Response 401 (application/json)
    + Body
        
            {
                "detail": "Error decoding signature."
            }

<!-- Problema con esta respuesta. Devuelve un error 500 -->            
+ Response 404 (application/json)
    + Body
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

### List of Own Projects [POST /gestion/list-proy-own]

Regresa una lista de objetos. Cada objeto contiene los datos de los proyectos que son propiedad del usuario autenticado, y los acomoda poniendo hasta el final de la lista el último que ha sido modificado

+ Request
    + Headers
    
            Authorization: Bearer [Token]

<!-- Acepta cualquier nombre de usuario. Podría respresentar riesgo de seguridad? -->            
+ Attributes
    + user (string) - Nombre del usuario

+ Response 202 (application/json)
    + Body
    
            [
                {
                    "name": "Mi proyecto",
                    "public": false,
                    "collab": false
                },
                {
                    "name": "Mi proyecto 2",
                    "public": false,
                    "collab": false
                },
                {
                    "name": "Mi proyecto 4",
                    "public": false,
                    "collab": false
                },
                {
                    "name": "nuevo proyecto",
                    "public": false,
                    "collab": false
                }
            ]
            
+ Response 401 (application/json)
    + Body
        
            {
                "detail": "Error decoding signature."
            }


<!-- Problema con esta respuesta. Devuelve un error 500 -->            
+ Response 404 (application/json)
    + Body
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

### Get Project Metadata [POST /gestion/get-proy-md]

Regresa una lista de objetos. Cada objeto contiene la lista de los metadatos del proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + project (string) - Nombre del proyecto
    
+ Response 200 (application/json)
    + Body
    
            {
                "metadata": [
                    "metadato 1",
                    "metadato 2"
                ]
            }
            
+ Response 404 (application/json)
    + Body
    
            {
                "error": "no se encontró el proyecto" // "error": "no se encontraron metadatos"
            }
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

### Part-of-speech tagging [POST /gestion/pos-tag-file]

Crea el etiquetado PoS en un determinado documento perteneciente a un proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + project (string) - Nombre del proyecto
    + document (string) - Nombre del documento
    
+ Response 201 (application/json)
    + Body
    
            {
                "exito": "Taggeo Terminado"
            }
            
+ Response 401 (application/json)
    + Body
        
            {
                "detail": "Error decoding signature."
            }

+ Response 404 (application/json)
    + Body
    
            {
                "error": "El proyecto no fue encontrado" // "error": "El documento no fue encontrado"
            }
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

<!-- Se modificará y se necesita considerar el caso en el que un documento no haya sido etiquetado previamente aunque exista
porque da error de servidor-->
### Download PoS Tags Document [POST /gestion/download-file]

Descarga el archivo después del etiquetado

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + project (string) - Nombre del proyecto
    + document (string) - Nombre del documento
    
+ Response 200 (application/json)
    + Body
    
            Devuelve un archivo TSV
            
+ Response 401 (application/json)
    + Body
        
            {
                "detail": "Error decoding signature."
            }

+ Response 404 (application/json)
    + Body
    
            {
                "error": "El proyecto no fue encontrado" // "error": "El documento no fue encontrado"
            }
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body


## group Delete Methods

### Remove Document [POST /gestion/borrar-documento/]

Borra un documento

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + name (string) - Nombre del documento
    + project (string) - Nombre del proyecto al que pertenece
    
+ Response 202 (aplication/json)
    + Body
    
            {
                "name": "pdf-sample.pdf",
                "project": "Mi proyecto"
            }

+ Response 404 (application/json)
    + Body
    
            {
                "error": "El documento no fue encontrado"
            }
            

+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body


### Remove Project [POST /gestion/]

Borra un proyecto

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + project (string) - Nombre del proyecto
    
+ Response 202 (aplication/json)
    + Body
            
            {
                "project": "Mi proyecto"
            }
    
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El proyecto no fue encontrado"
            }
            
+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Remove Metadata [POST /gestion/borrar-md-proyecto-nor/]

Borra un metadato

+ Request
    + Headers
    
            Authorization: Bearer [Token]
            
+ Attributes
    + name (string) - Nombre del metadato a borrar
    + project (string) - Nombre del proyecto al que pertenece
    
+ Response 202 (application/json)
    + Body
    
            {
                "name": "metadato",
                "project": "Mi proyecto"
            }

+ Response 404 (application/json)
    + Body
            {
                "error": "El metadato no fue encontrado"
            }

+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

### Remove Metadata-Document Relation  [POST /gestion/borrar-doc-nor-meta-rel/]

Borra un la relación de un documento con su metadato

+ Request
    + Headers
    
            Authorization: Bearer [Token]

+ Attributes
    + metadata (string) - Nombre del metadato
    + document (string) - Nombre del documento
    + project (string) - Nombre del proyecto

+ Response 202 (application/json)
    + Body
    
            {
                "project": "Mi proyecto",
                "metadata": "metadato",
                "document": "example.pdf"
            }

<!-- Hay un problema con esta respuesta, devuelve error de servidor en su lugar --> 
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El metadato o documento no fue encontrado"
            }

<!-- La respuesta es distinta a la programada -->
+ Response 401 (application/json)
    + Body
    
            {
                "detail": "Error decoding signature."
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
