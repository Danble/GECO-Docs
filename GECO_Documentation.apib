FORMAT: 1A
# GECO

Gestor de Corpus

## group Authentication

### Get an access token [POST /api-token-auth/]

Una vez que el usuario queda registrado se crea un token con el que se registrará que está activo y de esta manera pueda realizar las diferentes acciones sobre GECO

+ Attributes
    + email (string) - Correo electrónico del usuario
    + user_name (string) - Nombre de usuario
    + password (string) - Contraseña del usuario
    
+ Response 200 (application/json)
    + Body
    
            {
                "token": "JUHhhjsahdkadb7gewrr89rhwec2VyX2lkIjoxNSwidXNlcm5hbWUiOiJnYXRlc29mc2lsZW50QGhvdG1haWwuY29tIiwiZXhwIjoxNTQxNjM3ODMyLCJlbWFpbCI6ImdhdGVzb2ZzaWxlbnRAaG90bWFhhsadayssYGUGS9"
            }

## group Create Methods

### Create User [POST /gestion/registro-usuario]

Crea un nuevo usuario mientras no exista el nombre y/o esté registrado el correo electrónico

+ Attributes
    + email (string) - Correo electrónico del usuario
    + user_name (string) - Nombre de usuario
    + password (string) - Contraseña del usuario

+ Response 201 (application/json)
    + Body
    
            {
                "email": "usuario@gmail.com",
                "user_name": "nombre usuario",
                "password": "1234qwe"
            }
        
+ Response 409 (application/json)
    + Body
    
            {
                "error": "El nombre de usuario o correo ya existe"
            }
    
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Create Project [POST /gestion/crear-proyecto-normal]

Crea un nuevo proyecto
+ Request
    + Headers
    
            Authorization: Bearer

+ Attributes
    + name (string) - Nombre del proyecto

+ Response 201 (application/json)
    + Body
    
            {
                "name": "Mi proyecto"
            }

          
<!-- problema con esta respuesta -->           
+ Response 409
    + Body
    
            {
                "error": "El nombre de usuario o correo ya existe"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Upload Document [POST /gestion/upload1]

Sube documentos al proyecto

+ Request
    + Headers
    
            Authorization: Bearer

+ Attributes
    + file (object) - El documento
    + name (string) - Nombre del documento
    + project (string) - Un proyecto existente
    
+ Response 201 (application/json)
    + Body
    
            {
                "file": null
                "project": "Mi proyecto"
            }
            
+ Response 409
    + Body
    
            {
                "error": "El nombre del documento ya existe"
            }
            
+ Response 401
    + Body
    
            {
                "error": "El usuario no tiene permisos para hacer esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Create Metadata [POST /gestion/crear-md-proyecto-nor]

Agrega los metadatos deseados por el usuario que tenga las credenciales necesarias

+ Request
    + Headers
    
            Authorization: Bearer

+ Attributes
    + name (string) - Nombre del metadato
    + project (string) - Projecto al que pertenece el documento donde se agregará el metadato
    
+ Response 201 (application/json)
    + Body
    
            {
                "name": "nuevo metadato"
                "project": "Mi proyecto"
            }
            
+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permisos para hacer esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

    
### Relation Metadata-Document [POST /gestion/rel-doc-metadato]

Crea automáticamente una relación entre un documento con un metadato

+ Request
    + Headers
    
            Authorization: Bearer
            
+ Attributes
    + metadata (string) - Nombre del metadato
    + document (string) - Nombre del documento
    + project (string) - Nombre del proyecto donde se encuentran ambos
    + data (string) - ID o nombre de la relación
    
+ Response 201 (application/json)
    + Body
    
            {
                "project": "Mi proyecto",
                "metadata": "metadato nuevo",
                "document": "example.pdf",
                "data": "data"
            }
            
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El metadato no fue encontrado"
            }
            
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El documento no fue encontrado"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body


### Document-Metadata Relation [POST /gestion/rel-doc-metadato]

Establece una relación entre el documento y el o los metadatos

+ Attributes
    + metadata (string)
    + document
    + data


## group Delete Methods

### Remove Document [POST /gestion/borrar-documento/]

Borra un documento

+ Request
    + Headers
    
            Authorization: Bearer
            
+ Attributes
    + name (string) - Nombre del documento
    + project (string) - Nombre del proyecto al que pertenece
    
+ Response 202 (aplication/json)
    + Body
    
            {
                "name": "pdf-sample.pdf",
                "project": "Mi proyecto"
            }

+ Response 404 (application/json)
    + Body
    
            {
                "error": "El documento no fue encontrado"
            }
            

+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body


### Remove Project [POST /gestion/]

Borra un proyecto

+ Request
    + Headers
    
            Authorization: Bearer
            
+ Attributes
    + project (string) - Nombre del proyecto
    
+ Response 202 (aplication/json)
    + Body
            
            {
                "project": "Mi proyecto"
            }
    
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El proyecto no fue encontrado"
            }
            
+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body

### Remove Metadata [POST /gestion/borrar-md-proyecto-nor/]

Borra un metadato

+ Request
    + Headers
    
            Authorization: Bearer
            
+ Attributes
    + name (string) - Nombre del metadato a borrar
    + project (string) - Nombre del proyecto al que pertenece
    
+ Response 202 (application/json)
    + Body
    
            {
                "name": "metadato",
                "project": "Mi proyecto"
            }

+ Response 404 (application/json)
    + Body
            {
                "error": "El metadato no fue encontrado"
            }

+ Response 401 (application/json)
    + Body
    
            {
                "error": "El usuario no tiene permiso para realizar esta accion"
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
    

### Remove Metadata-Document Relation  [POST /gestion/borrar-doc-nor-meta-rel/]

Borra un la relación de un documento con su metadato

+ Request
    + Headers
    
            Authorization: Bearer

+ Attributes
    + metadata (string) - Nombre del metadato
    + document (string) - Nombre del documento
    + project (string) - Nombre del proyecto

+ Response 202 (application/json)
    + Body
    
            {
                "project": "Mi proyecto",
                "metadata": "metadato",
                "document": "example.pdf"
            }

<!-- Hay un problema con esta respuesta, devuelve error de servidor en su lugar --> 
+ Response 404 (application/json)
    + Body
    
            {
                "error": "El metadato o documento no fue encontrado"
            }

<!-- La respuesta es distinta a la programada -->
+ Response 401 (application/json)
    + Body
    
            {
                "detail": "Error decoding signature."
            }
            
+ Response 400 (application/json)
    Cuando algún parámetro se manda de forma errónea
    + Body
